# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Allergy {
  id: String!
  name: String!
  products: [Product!]!
}

type MainCategory {
  id: String!
  name: String!
}

type SubCategory {
  id: String!
  name: String!
  mainCategory: MainCategory!
}

type Product {
  id: String!
  koName: String!
  enName: String!
  description: String!
  kcal: Int!
  mg: Int!
  subCategory: SubCategory!
  allergies: [Allergy!]!
}

type User {
  id: String!
  email: String!
  name: String!
  age: Int!
  point: Int!
}

type Payment {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  fetchLoginUser(email: String!): User!
  fetchProducts: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchSubCategories: [SubCategory!]!
  fetchMainCategories: [MainCategory!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  restoreAccessToken: String!
  createUser(user: CreateUserInput!): User!
  deleteLoginUser(id: String!): Boolean!
  updateUser(email: String!, updateUserInput: UpdateUserInput!): User!
  updateUserPwd(email: String!, password: String!): User!
  createPointTransaction(impUid: String!, amount: Int!): Payment!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  restoreProduct(productId: String!): Boolean!
  fetchProductsWithDeleted: [Product!]!
  createSubCategory(createSubCategoryInput: CreateSubCategoryInput!): SubCategory!
  createMainCategory(name: String!): MainCategory!
}

input CreateUserInput {
  password: String!
  email: String!
  name: String!
  age: Int!
}

input UpdateUserInput {
  password: String
  email: String
  name: String
  age: Int
}

input CreateProductInput {
  koName: String!
  enName: String!
  description: String!
  kcal: Int!
  mg: Int!
  subCategoryId: String!
  allergies: [String!]!
}

input UpdateProductInput {
  koName: String
  enName: String
  description: String
  kcal: Int
  mg: Int
  subCategoryId: String
  allergies: [String!]
}

input CreateSubCategoryInput {
  name: String!
  mainCategoryId: String!
}